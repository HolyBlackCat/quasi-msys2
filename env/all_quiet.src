#!/bin/false
# The above line stops anyone from running this script normally, but allows `source`ing it.

# Make a dummy function to be able to have local variables.
__dummy_func() {
    # Helper variable pointing to the env scripts directory.
    local env_path="$(realpath "$(dirname "$BASH_SOURCE")")"
    # Make sure the resulting variable is not empty due to some error. If it is, abort.
    test -z "$env_path" && return 1

    echo -e '\n--- binfmt.mk'
    make -f "$env_path/binfmt.mk" QUIET=1

    echo -e '\n--- fakebin.mk'
    make -f "$env_path/fakebin.mk" QUIET=1 || return 1

    # This should probably go after `fakebin.mk`, because whether or not we install
    # package manager hooks (that call `fakebin.mk`) depends on whether we have the `fake_bin` directory.
    echo -e '\n--- vars.sh'
    source "$env_path/vars.src" || return 1
}
# Call our dummy funcion.
__dummy_func
# Delete the function.
unset -f __dummy_func
